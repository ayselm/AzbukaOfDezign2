{"version":3,"file":"gallery.a3b35658161a4dba91a2.js","mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAUF,SAASG,cAAc,YACvC,GAAKD,EAAL,CAEA,IAAME,EAAQF,EAAQC,cAAc,kBAC9BE,EAASH,EAAQI,iBAAiB,kBAClCC,EAAOL,EAAQI,iBAAiB,QAClCE,EAAU,EACVC,EAAW,KACXC,GAAc,EA4ClBR,EAAQD,iBAAiB,SAAS,SAACU,GAC/B,IAAMC,EAAMD,EAAEE,OAAOC,QAAQ,QAC7B,GAAIF,EAAK,CACL,IAAMG,EAAQC,MAAMC,KAAKV,GAAMW,QAAQN,IACxB,IAAXG,IACAI,IACAC,EAAUL,GACVM,IAER,CACJ,IAGAnB,EAAQD,iBAAiB,SAAS,SAACU,GAC1BA,EAAEE,OAAOC,QAAQ,UAClBK,IACAG,IACAD,IAER,IAGAA,IAGAnB,EAAQD,iBAAiB,aAAckB,GACvCjB,EAAQD,iBAAiB,aAAcoB,GAGvC,IAAIE,EAAc,EACdC,EAAY,EAEhBtB,EAAQD,iBAAiB,cAAc,SAACU,GACpCY,EAAcZ,EAAEc,eAAe,GAAGC,QAClCP,GACJ,IAEAjB,EAAQD,iBAAiB,YAAY,SAACU,GAClCa,EAAYb,EAAEc,eAAe,GAAGC,QAKpC,WACI,IAAIhB,EAAJ,CAEA,IAAMiB,EAAOJ,EAAcC,EACvBI,KAAKC,IAAIF,GAAQ,IAEbP,EADAO,EAAO,EACGnB,EAAU,EAEVA,EAAU,EAPL,CAU3B,CAfIsB,GACAT,GACJ,IAgBAU,OAAO9B,iBAAiB,gBAAgB,WACpCkB,GACJ,GA9GoB,CASpB,SAASC,EAAUL,GACXL,IACJA,GAAc,EAEVK,EAAQ,IAAGA,EAAQV,EAAO2B,OAAS,GACnCjB,GAASV,EAAO2B,SAAQjB,EAAQ,GAEpCX,EAAM6B,MAAMC,UAAY,eAAHC,OAA0B,IAARpB,EAAW,MAElDR,EAAK6B,SAAQ,SAACxB,EAAKyB,GACfzB,EAAI0B,UAAUC,OAAO,SAAUF,IAAMtB,EACzC,IAEAP,EAAUO,EAGVyB,YAAW,WACP9B,GAAc,CAClB,GAAG,KACP,CAEA,SAASY,IACAZ,GACDU,EAAUZ,EAAU,EAE5B,CAEA,SAASa,IACDZ,GACAgC,cAAchC,GAElBA,EAAWiC,YAAYpB,EAAW,IACtC,CAEA,SAASH,IACDV,IACAgC,cAAchC,GACdA,EAAW,KAEnB,CA+DJ","sources":["webpack://static-site-boilerplate/./src/javascript/ui/gallery-init.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    const gallery = document.querySelector('.gallery');\r\n    if (!gallery) return;\r\n\r\n    const track = gallery.querySelector('.gallery-track');\r\n    const slides = gallery.querySelectorAll('.gallery-slide');\r\n    const dots = gallery.querySelectorAll('.dot');\r\n    let current = 0;\r\n    let interval = null;\r\n    let isAnimating = false;\r\n\r\n    function goToSlide(index) {\r\n        if (isAnimating) return;\r\n        isAnimating = true;\r\n\r\n        if (index < 0) index = slides.length - 1;\r\n        if (index >= slides.length) index = 0;\r\n        \r\n        track.style.transform = `translateX(-${index * 100}%)`;\r\n        \r\n        dots.forEach((dot, i) => {\r\n            dot.classList.toggle('active', i === index);\r\n        });\r\n        \r\n        current = index;\r\n\r\n        // Reset animation flag after transition\r\n        setTimeout(() => {\r\n            isAnimating = false;\r\n        }, 500); // Match this with your CSS transition duration\r\n    }\r\n\r\n    function nextSlide() {\r\n        if (!isAnimating) {\r\n            goToSlide(current + 1);\r\n        }\r\n    }\r\n\r\n    function startAutoPlay() {\r\n        if (interval) {\r\n            clearInterval(interval);\r\n        }\r\n        interval = setInterval(nextSlide, 5000);\r\n    }\r\n\r\n    function stopAutoPlay() {\r\n        if (interval) {\r\n            clearInterval(interval);\r\n            interval = null;\r\n        }\r\n    }\r\n\r\n    // Initialize dots with proper event delegation\r\n    gallery.addEventListener('click', (e) => {\r\n        const dot = e.target.closest('.dot');\r\n        if (dot) {\r\n            const index = Array.from(dots).indexOf(dot);\r\n            if (index !== -1) {\r\n                stopAutoPlay();\r\n                goToSlide(index);\r\n                startAutoPlay();\r\n            }\r\n        }\r\n    });\r\n\r\n    // Gallery click handler\r\n    gallery.addEventListener('click', (e) => {\r\n        if (!e.target.closest('.dot')) {\r\n            stopAutoPlay();\r\n            nextSlide();\r\n            startAutoPlay();\r\n        }\r\n    });\r\n\r\n    // Start autoplay\r\n    startAutoPlay();\r\n\r\n    // Pause on hover\r\n    gallery.addEventListener('mouseenter', stopAutoPlay);\r\n    gallery.addEventListener('mouseleave', startAutoPlay);\r\n\r\n    // Touch events for mobile\r\n    let touchStartX = 0;\r\n    let touchEndX = 0;\r\n\r\n    gallery.addEventListener('touchstart', (e) => {\r\n        touchStartX = e.changedTouches[0].screenX;\r\n        stopAutoPlay();\r\n    });\r\n\r\n    gallery.addEventListener('touchend', (e) => {\r\n        touchEndX = e.changedTouches[0].screenX;\r\n        handleSwipe();\r\n        startAutoPlay();\r\n    });\r\n\r\n    function handleSwipe() {\r\n        if (isAnimating) return;\r\n        \r\n        const diff = touchStartX - touchEndX;\r\n        if (Math.abs(diff) > 50) { // Minimum swipe distance\r\n            if (diff > 0) {\r\n                goToSlide(current + 1); // Swipe left\r\n            } else {\r\n                goToSlide(current - 1); // Swipe right\r\n            }\r\n        }\r\n    }\r\n\r\n    // Cleanup on page unload\r\n    window.addEventListener('beforeunload', () => {\r\n        stopAutoPlay();\r\n    });\r\n}); "],"names":["document","addEventListener","gallery","querySelector","track","slides","querySelectorAll","dots","current","interval","isAnimating","e","dot","target","closest","index","Array","from","indexOf","stopAutoPlay","goToSlide","startAutoPlay","nextSlide","touchStartX","touchEndX","changedTouches","screenX","diff","Math","abs","handleSwipe","window","length","style","transform","concat","forEach","i","classList","toggle","setTimeout","clearInterval","setInterval"],"sourceRoot":""}